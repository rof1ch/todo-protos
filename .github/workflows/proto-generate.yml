name: Generate Proto

on:
  push:
    paths:
      - 'proto/**/*.proto'
  pull_request:
    paths:
      - 'proto/**/*.proto'

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install protoc
        uses: arduino/setup-protoc@v2
        with:
          version: '25.2' # или другая нужная версия

      - name: Install Go plugins for protoc
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Generate proto code
        run: task gen

      # Автокоммит изменений
      - name: Commit changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Auto-generated proto files"
          git push https://github.com/${{ github.repository }} HEAD

      # Создание нового тега на основе последнего
      - name: Get last tag and increment version
        id: version
        run: |
          # Получаем последний тег
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Last tag: $LAST_TAG"

          # Извлекаем версии
          VERSION=${LAST_TAG/v/}  # Убираем 'v' из начала
          IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION"

          # Увеличиваем последнюю часть версии (PATCH)
          PATCH="${VERSION_ARRAY[2]}"
          NEW_PATCH=$((PATCH + 1))

          # Собираем новый тег
          NEW_TAG="v${VERSION_ARRAY[0]}.${VERSION_ARRAY[1]}.$NEW_PATCH"
          echo "New tag: $NEW_TAG"
          echo "::set-output name=new_tag::$NEW_TAG"

      # Пушим новый тег
      - name: Create and push new tag
        run: |
          git tag "${{ steps.version.outputs.new_tag }}"
          git push https://github.com/${{ github.repository }} "${{ steps.version.outputs.new_tag }}"
